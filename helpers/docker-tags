#!/usr/bin/env bash

# Gets all tags for a given docker image.

# Examples:

# retrieve all tags for a single library
# docker-tags "library/redis" | jq --raw-output '.[]'

# Kudos go to https://gist.github.com/robv8r/fa66f5e0fdf001f425fe9facf2db6d49
token_uri="https://auth.docker.io/token"
list_uri="https://registry-1.docker.io/v2/###IMAGE###/tags/list"

DEFAULT_FILTER="^[0-9][^r|c]*alpine$"

function get_token() {
  local scope="repository:$1:pull"
  curl -sSL "$token_uri?service=registry.docker.io&scope=$scope" | jq -r .token
}

function get_version() {
  local image=$1
  local token=$2
  this_uri=$( echo -n "${list_uri}" | sed -e "s^###IMAGE###^${image}^" )
  curl -Ss -H "Accept: application/json" -H "Authorization: Bearer $token" "${this_uri}" | jq .
}

function latest-docker-tag() {
  local image=$1
  local pattern=$2
  local token=$(get_token $image)
  local versions=$(get_version $image $token)
  local latest=$(echo $versions | jq -r '.tags[]' | grep -E $pattern | sort -V | tail -n1)
  echo $latest
}

function check-docker-tag() {
  local image=$1
  local tag=$2
  local token=$(get_token $image)
  local versions=$(get_version $image $token)
  local found=$(echo $versions | jq -r '.tags[]' | grep -E $tag | sort -V | tail -n1)
  echo $found
}

if [[ "$0" == *"docker-tag" ]]
then
  eval $(basename $0) $@
fi