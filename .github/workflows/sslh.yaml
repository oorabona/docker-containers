name: sslh

on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  generate-job-strategy-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files-dir-names.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run changed-files with dir_names
        id: changed-files-dir-names
        uses: tj-actions/changed-files@v34
        with:
          dir_names: "true"
          files_ignore: ".github/**"
          json: "true"
      - 
        name: List all changed files
        run: |
          for file in ${{ steps.changed-files-dir-names.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      -
        name: List all changed directories
        run: |
          for dir in ${{ steps.changed-files-dir-names.outputs.all_changed_dirs }}; do
            echo "$dir was changed"
          done
      -
        name: Do we need to rebuild all images?
        if: ${{ steps.changed-files-dir-names.outputs.all_changed_dirs == '' }}
        run: |
          echo "No directories were changed, we need to rebuild all images"
          echo "matrix=['sslh']" >> $GITHUB_OUTPUT

  docker:
    needs: generate-job-strategy-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: ${{ fromJson(needs.generate-job-strategy-matrix.outputs.matrix) }}
    steps:
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            oorabona/${{ matrix.job }}
            ghcr.io/oorabona/${{ matrix.job }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Get SSLH version
        id: sslh
        run: |
          version=$(git ls-remote --tags --sort="v:refname" https://github.com/yrutschle/sslh.git 2>/dev/null | grep -Po "v\d+(\.\d+)+$" | tail -n1 | sed 's/.*\///; s/\^{}//')
          echo "version=${version}" >> $GITHUB_OUTPUT
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: sslh/
          build-args: |
            SSLH_VERSION=${{ steps.sslh.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=oorabona/${{ matrix.job }}:buildcache
          cache-to: type=registry,ref=oorabona/${{ matrix.job }}:buildcache,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      -
        name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: oorabona/${{ matrix.job }}
          short-description: ${{ steps.meta.outputs.labels }}
          readme-filepath: ./${{ matrix.job }}/README.md