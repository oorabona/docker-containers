name: On demand execution (force rebuild without cache)

on: 
  workflow_dispatch:
    inputs:
      container:
        description: 'Container to deploy'
        required: true
        options:
          - sslh
          - terraform
          - ansible
          - openvpn
        default: 'openvpn'
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Get number of vCPU
        id: get_vcpu
        run: |
          vcpu=$(nproc)
          echo "vcpu=${vcpu}" >> $GITHUB_OUTPUT
      -
        name: Get ${{ github.event.inputs.container }} version
        id: get_version
        working-directory: ${{ github.event.inputs.container }}
        run: |
          version=$(bash version.sh ${{ github.event.inputs.version }})
          echo "version=${version}" >> $GITHUB_OUTPUT
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            oorabona/${{ github.event.inputs.container }}
            ghcr.io/oorabona/${{ github.event.inputs.container }}
          # generate Docker tags based on the following events/attributes
          tags: |
            # set version from upstream repo version
            type=raw,value=${{ steps.get_version.outputs.version }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ github.event.inputs.container }}
          build-args: |
            VERSION=${{ steps.get_version.outputs.version }}
            NPROC=${{ steps.get_vcpu.outputs.vcpu }}
          platforms: ${{ steps.buildx.outputs.platforms }}
          # Force rebuild without cache
          cache-from: false
          cache-to: type=registry,ref=oorabona/${{ github.event.inputs.container }}:buildcache,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Get short description from README.md
        id: get_short_description
        working-directory: ${{ github.event.inputs.container }}
        run: |
          short_description=$(grep -m 1 -oP '(?<=^# ).*' README.md)
          echo "short_description=${short_description}" >> $GITHUB_OUTPUT
      -
        name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: oorabona/${{ github.event.inputs.container }}
          short-description: ${{ steps.get_short_description.outputs.short_description }}
          readme-filepath: ./${{ github.event.inputs.container }}/README.md